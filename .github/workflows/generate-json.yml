name: Generate JSON Files

on:
  workflow_dispatch:
    inputs:
      version_tag:
        description: 'Version tag for the generated files (e.g., v1.0.0)'
        required: true
        type: string

permissions:
  contents: read
  packages: write  # Needed for publishing packages

jobs:
  generate:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyyaml requests python-dotenv
        
    - name: Create output directories
      run: |
        mkdir -p layers
        mkdir -p styles
        mkdir -p dist
        
    - name: Set up environment variables
      env:
        BITBUCKET_USERNAME: ${{ secrets.BITBUCKET_USERNAME }}
        BITBUCKET_TOKEN: ${{ secrets.BITBUCKET_TOKEN }}
        LAYERDIR: ./layers
        STYLEDIR: ./styles
      run: |
        echo "BITBUCKET_USERNAME=$BITBUCKET_USERNAME" >> .env
        echo "BITBUCKET_TOKEN=$BITBUCKET_TOKEN" >> .env
        echo "LAYERDIR=$LAYERDIR" >> .env
        echo "STYLEDIR=$STYLEDIR" >> .env
        
    - name: Run Python scripts
      run: |
        python create_forecast_layers.py
        python create_forecast_styles.py
        
    - name: Prepare package
      run: |
        # Create package directory
        mkdir -p dist/package
        cp layers/*.json dist/package/
        cp styles/*.json dist/package/
        
        # Add metadata
        echo "${{ github.event.inputs.version_tag }}" > dist/package/version.txt
        echo "$(date -u '+%Y-%m-%dT%H:%M:%SZ')" > dist/package/generated_at.txt
        
        # Create package.json for npm package
        cat > dist/package/package.json << EOF
        {
          "name": "@${{ github.repository_owner }}/forecast-data",
          "version": "${{ github.event.inputs.version_tag }}",
          "description": "Generated forecast data files",
          "files": [
            "*.json",
            "version.txt",
            "generated_at.txt"
          ],
          "repository": {
            "type": "git",
            "url": "git+https://github.com/${{ github.repository }}.git"
          },
          "publishConfig": {
            "registry": "https://npm.pkg.github.com"
          }
        }
        EOF
        
        # Create README
        cat > dist/package/README.md << EOF
        # Forecast Data Package
        
        Version: ${{ github.event.inputs.version_tag }}
        Generated: $(date -u '+%Y-%m-%d %H:%M:%S UTC')
        
        This package contains generated forecast data files.
        EOF
        
        # Create tarball
        cd dist/package
        npm pack
        mv *.tgz ../
        
    - name: Publish to GitHub Packages
      env:
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Configure npm
        echo "@${{ github.repository_owner }}:registry=https://npm.pkg.github.com" > .npmrc
        echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> .npmrc
        
        # Publish package
        cd dist/package
        npm publish --access public
        
    - name: Upload artifact for deployment
      uses: actions/upload-artifact@v4
      with:
        name: json-files-${{ github.event.inputs.version_tag }}
        path: dist/package
        retention-days: 90 