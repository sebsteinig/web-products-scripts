name: Check External Configs

on:
  schedule:
    - cron: '0 */6 * * *'  # runs every 6 hours
  workflow_dispatch:  # allow manual triggers for testing

permissions:
  issues: write
  actions: write

jobs:
  check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    # Step to set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    # Step to install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests pyyaml

    # Step to get all completed workflow runs for the current workflow
    - name: Get all completed workflow runs
      id: get_all_runs
      env:
        GH_TOKEN: ${{ github.token }}  # Set the GitHub token for authentication
      run: |
        completed_runs=$(gh run list --workflow check-configs.yml --status completed --json databaseId --jq '.[].databaseId')
        echo "Completed runs: $completed_runs"
        # Save the latest run ID
        latest_run_id=$(echo "$completed_runs" | head -n 1)
        echo "Latest completed run ID: $latest_run_id"
        echo "latest_run_id=$latest_run_id" >> $GITHUB_ENV
        echo "completed_runs=$completed_runs" >> $GITHUB_ENV

    # Step to download the previous config files from the latest completed run
    - name: Download previous config files
      id: download
      uses: actions/download-artifact@v4
      continue-on-error: true
      with:
        name: config-files
        path: previous-configs
        run-id: ${{ env.latest_run_id }}  # Use the latest completed run ID

    # Step to download the new config files
    - name: Download new config files
      run: |
        # Download the new config files
        curl -o new_var_config.yaml "https://git.ecmwf.int/projects/CDS/repos/cads-forms-cams/raw/cams-europe-air-quality-forecasts/regional_fc_definitions.yaml?at=refs%2Fheads%2Fprod"
        curl -o new_style_config.yaml "https://raw.githubusercontent.com/CopernicusAtmosphere/air-quality-plot-settings/refs/heads/main/plot_settings.yaml"

    # Step to compare the new config files with the previous ones
    - name: Compare config files
      id: compare
      run: |
        # Create a directory for the comparison results
        mkdir -p comparison-results
        
        # Initialize a flag to check if previous configs exist
        previous_configs_exist=false
        
        # Compare variable config files
        if [ -f "previous-configs/new_var_config.yaml" ]; then
          previous_configs_exist=true
          diff new_var_config.yaml previous-configs/new_var_config.yaml > comparison-results/var_config_diff.txt || true
        else
          echo "No previous variable config file found."
        fi
        
        # Compare style config files
        if [ -f "previous-configs/new_style_config.yaml" ]; then
          previous_configs_exist=true
          diff new_style_config.yaml previous-configs/new_style_config.yaml > comparison-results/style_config_diff.txt || true
        else
          echo "No previous style config file found."
        fi

        # Check if there are any differences
        if [ -s comparison-results/var_config_diff.txt ] || [ -s comparison-results/style_config_diff.txt ] || [ "$previous_configs_exist" = true ]; then
          echo "Differences found in config files or new previous config found."
          echo "::set-output name=config_changed::true"
        else
          echo "No differences found in config files."
          echo "::set-output name=config_changed::false"
        fi

    # Step to create an issue if changes are detected
    - name: Create Issue
      if: steps.compare.outputs.config_changed == 'true'
      uses: actions/github-script@v6
      with:
        script: |
          await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'ðŸ”„ External Config Files Changed',
            body: `Changes detected in external configuration files.

            You can view the differences in the comparison results.
            `
          });

    # Step to delete existing artifacts
    - name: Delete existing artifacts
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Set the GitHub token for authentication
      run: |
        echo "Deleting existing artifacts..."
        for artifact_id in $(gh api repos/${{ github.repository }}/actions/artifacts --jq '.artifacts[] | select(.name == "config-files") | .id'); do
          echo "Deleting artifact with ID: $artifact_id"
          gh api -X DELETE /repos/${{ github.repository }}/actions/artifacts/$artifact_id
        done

    # Step to upload the new config files as an artifact
    - name: Upload new config files
      if: steps.compare.outputs.config_changed == 'true'  # Only upload if changes are detected
      uses: actions/upload-artifact@v4
      with:
        name: config-files
        path: |
          new_var_config.yaml
          new_style_config.yaml 

    # Step to list artifacts
    - name: List artifacts
      env:
        GH_TOKEN: ${{ github.token }}  # Set the GitHub token for authentication
      run: |
        echo "Listing artifacts..."
        gh api repos/${{ github.repository }}/actions/artifacts 